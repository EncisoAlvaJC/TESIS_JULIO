ylab('Hurst Exponent') + xlab('Age') +
labs(shape=NULL,color=NULL) +
facet_wrap(~Canal_var,ncol=6) +
theme_classic2() +
geom_smooth(method=lm,
mapping=aes(x=Edad,y=Hurst),
inherit.aes=F,
se=F,color='gray60') +
scale_colour_discrete(guide = FALSE) +
theme(strip.background = element_blank())+
theme(legend.position='top')+
coord_cartesian(xlim=c(59,79))+
facet_grid(Etapa~Canal_var) +
geom_point()
ggarrange(A,B,ncol=1,nrow=2,labels='AUTO',common.legend=TRUE)
ggsave(filename='/Fig02_edad_hurst.png',path=dir_graf,
device='png',units='cm',width=7,height=7,dpi=400,scale=2)
x = rnorm(100)
write.table(x)
write.table(x,file = 'algo.txt')
??loess
source('C:/Users/EQUIPO 1/Desktop/julio/TESIS_no/articulo_dfa/scripts/graf_hurst10_corrcov.R')
source('C:/Users/EQUIPO 1/Desktop/julio/TESIS_no/articulo_dfa/scripts/graf_hurst10_corrcov.R')
View(promedios.MOR)
promedios_un = dcast(promedios,Canal_var~Hurst)
??dcast
require(reshape2)
promedios_un = dcast(promedios,Canal_var~Hurst)
View(promedios_un)
promedios_un = dcast(promedios,Hurst~Canal_var)
promedios_un = dcast(promedios,Canal_var~Hurst)
promedios_un = dcast(promedios,Hurst~Canal_var)
promedios_un = dcast(promedios,Canal_var~Hurst)
promedios_un = dcast(promedios,Sujeto_n~Canal_var)
promedios_un = dcast(promedios,Grupo~Canal_var)
View(promedios)
promedios_un = dcast(promedios,Sujeto~Canal_var)
promedios_un = dcast(promedios,Sujeto+Grupo~Canal_var)
View(promedios_un)
promedios_un = dcast(promedios,Sujeto+Grupo~Canal_var,value.var = Hurst)
promedios_un = dcast(promedios,Grupo~Canal_var,value.var = Hurst)
promedios$Canal_var = factor(promedios$Canal_var,
lables=kanales$Etiqueta)
promedios$Canal_var = factor(promedios$Canal_var,
labels=kanales$Etiqueta)
promedios_un = dcast(promedios.MOR,Grupo~Canal_var,value.var = Hurst)
promedios_un = dcast(promedios.MOR,Grupo~Canal_var)
source('C:/Users/EQUIPO 1/Desktop/julio/TESIS_no/articulo_dfa/scripts/graf_hurst10_corrcov.R')
View(promedios.todo)
View(Hurst.todo)
Hurst_un = dcast(Hurst.todo,Sujeto_n~Canal_var)
Hurst_un = dcast(Hurst.todo,Sujeto_n~Canal_var,value.var = Hurst)
Hurst_un = dcast(Hurst.todo,Sujeto_n~Canal_var,value.var = 'Hurst')
View(Hurst_un)
Hurst_un = dcast(Hurst.todo,Sujeto_n~Canal_var,value.var =Hurst)
Hurst_un = dcast(Hurst.todo,Sujeto_n+MORn~Canal_var,value.var =Hurst)
Hurst_un = dcast(Hurst.todo,Sujeto_n+MORn~Canal_var,value.var ='Hurst')
Hurst_un = dcast(Hurst.todo,Sujeto_n~Canal_var,value.var ='Hurst')
Hurst_un = dcast(Hurst.todo,Sujeto_n~Canal_var,value.var ='Hurst',
fun.aggregate = 'mean')
Hurst_un = dcast(Hurst.todo,Sujeto_n~Canal_var,value.var ='Hurst',
fun.aggregate = mean)
Hurst_un = dcast(Hurst.todo,MORn,Sujeto_n~Canal_var,value.var ='Hurst',
fun.aggregate = mean)
Hurst_un = dcast(Hurst.todo,MORn+Sujeto_n~Canal_var,value.var ='Hurst',
fun.aggregate = mean)
Hurst_un = dcast(Hurst.todo,Canal_var+Sujeto_n~MORn,value.var ='Hurst',
fun.aggregate = mean)
Hurst_un = dcast(Hurst.todo,Sujeto_n+Canal_var~MORn,value.var ='Hurst',
fun.aggregate = mean)
Hurst_un = dcast(Hurst.todo,MORn+Sujeto_n~Canal_var,value.var ='Hurst',
fun.aggregate = mean)
source('C:/Users/EQUIPO 1/Desktop/julio/TESIS/articulo_dfa/scripts/graf_hurst10_anova.R')
# nuevo: anova de medidas repetidas
big.summary = c()
ch = 1
ch.actual = kanales$Etiqueta[ch]
print(ch.actual)
#tmp   = Hurst.todo.promedio[grep(ch.actual,Hurst.todo.promedio$Canal),]
tmp   = Hurst.MOR[grep(ch.actual,Hurst.MOR$Canal),]
tmp.m = promedios.MOR[grep(ch.actual,promedios.MOR$Canal),]
aov   = aov(Hurst ~ (Grupo) + (MORn) +(Grupo:MORn),
data=tmp)
k = summary(aov)
k = k[[1]]
print(k)
View(tmp)
plot(k)
plot(aov)
View(promedios.MOR)
p = ggplot(tmp.m,aes(x=MORn,y=Hurst,linetype=Grupo))+
theme_classic2() +
labs(linetype=ch.actual)+
coord_cartesian(ylim=c(0.3,1.75))+
geom_line(aes(group=Grupo))+
#geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),width=.1,
#              color='grey40') +
geom_point()
print(p)
p = ggplot(tmp,aes(x=MORn,y=Hurst,linetype=Grupo))+
theme_classic2() +
labs(linetype=ch.actual)+
coord_cartesian(ylim=c(0.3,1.75))+
geom_line(aes(group=Grupo))+
#geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),width=.1,
#              color='grey40') +
geom_point()
print(p)
#tmp   = Hurst.todo.promedio[grep(ch.actual,Hurst.todo.promedio$Canal),]
tmp   = Hurst.MOR[grep(ch.actual,Hurst.MOR$Canal),]
#tmp.m = promedios.MOR[grep(ch.actual,promedios.MOR$Canal),]
tmp.m = summarySE(tmp,na.rm=T,measurevar='Hurst',
groupvars=c('Grupo','MORn'))
View(tmp.m)
p = ggplot(tmp,aes(x=MORn,y=Hurst,linetype=Grupo))+
theme_classic2() +
labs(linetype=ch.actual)+
coord_cartesian(ylim=c(0.3,1.75))+
geom_line(aes(group=Grupo))+
#geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),width=.1,
#              color='grey40') +
geom_point()
print(p)
p = ggplot(tmp.m,aes(x=MORn,y=Hurst,linetype=Grupo))+
theme_classic2() +
labs(linetype=ch.actual)+
coord_cartesian(ylim=c(0.3,1.75))+
geom_line(aes(group=Grupo))+
#geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),width=.1,
#              color='grey40') +
geom_point()
print(p)
p = ggplot(tmp.m,aes(x=MORn,y=Hurst,linetype=Grupo))+
theme_classic2() +
labs(linetype=ch.actual)+
#coord_cartesian(ylim=c(0.3,1.75))+
geom_line(aes(group=Grupo))+
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),width=.1,
color='grey40') +
geom_point()
print(p)
promedios2.MOR = summarySE(Hurst.MOR,na.rm=T,measurevar='Hurst',
groupvars=c('Grupo','MORn'))
promedios2.MOR = summarySE(Hurst.MOR,na.rm=T,measurevar='Hurst',
groupvars=c('Grupo','MORn'))
min(promedios2.MOR$Hurst- promedios2.MOR$sd)
max(promedios2.MOR$Hurst+ promedios2.MOR$sd)
for(ch in 1:n.canales){
ch.actual = kanales$Etiqueta[ch]
print(ch.actual)
#tmp   = Hurst.todo.promedio[grep(ch.actual,Hurst.todo.promedio$Canal),]
tmp   = Hurst.MOR[grep(ch.actual,Hurst.MOR$Canal),]
#tmp.m = promedios.MOR[grep(ch.actual,promedios.MOR$Canal),]
tmp.m = summarySE(tmp,na.rm=T,measurevar='Hurst',
groupvars=c('Grupo','MORn'))
aov   = aov(Hurst ~ (Grupo) + (MORn) +(Grupo:MORn),
data=tmp)
k = summary(aov)
k = k[[1]]
print(k)
p = ggplot(tmp.m,aes(x=MORn,y=Hurst,linetype=Grupo))+
theme_classic2() +
labs(linetype=ch.actual)+
coord_cartesian(ylim=c(0.95,1.75))+
geom_line(aes(group=Grupo))+
geom_errorbar(aes(ymin=Hurst-se,ymax=Hurst+se),width=.1,
color='grey40') +
geom_point()
print(p)
#ggsave(path=dir_graf,device='png',units='cm',
#       width=8,height=4,dpi=400,scale=2,
#       file=paste0(ch.actual,'.png'))
qs  = summarySE(data=tmp,groupvars=c('Grupo','MORn'),
measurevar='Hurst')
qs2 = unlist(t(qs))
qs2 = as.list((qs2))
qs2 = unlist(t(qs2))
big.summary = rbind(big.summary,qs2)
View(k)
invisible(readline(prompt="Presion [enter] para continuar"))
}
promedios2.MOR = summarySE(Hurst.MOR,na.rm=T,measurevar='Hurst',
groupvars=c('Grupo','MORn'))
min(promedios2.MOR$Hurst- promedios2.MOR$sd)
max(promedios2.MOR$Hurst+ promedios2.MOR$sd)
View(promedios2.MOR)
promedios2.MOR = summarySE(Hurst.MOR,na.rm=T,measurevar='Hurst',
groupvars=c('Grupo','MORn','Canal_var'))
min(promedios2.MOR$Hurst- promedios2.MOR$sd)
max(promedios2.MOR$Hurst+ promedios2.MOR$sd)
for(ch in 1:n.canales){
ch.actual = kanales$Etiqueta[ch]
print(ch.actual)
#tmp   = Hurst.todo.promedio[grep(ch.actual,Hurst.todo.promedio$Canal),]
tmp   = Hurst.MOR[grep(ch.actual,Hurst.MOR$Canal),]
#tmp.m = promedios.MOR[grep(ch.actual,promedios.MOR$Canal),]
tmp.m = summarySE(tmp,na.rm=T,measurevar='Hurst',
groupvars=c('Grupo','MORn'))
aov   = aov(Hurst ~ (Grupo) + (MORn) +(Grupo:MORn),
data=tmp)
k = summary(aov)
k = k[[1]]
print(k)
p = ggplot(tmp.m,aes(x=MORn,y=Hurst,linetype=Grupo))+
theme_classic2() +
labs(linetype=ch.actual)+
coord_cartesian(ylim=c(0.3,2.25))+
geom_line(aes(group=Grupo))+
geom_errorbar(aes(ymin=Hurst-sd,ymax=Hurst+sd),width=.1,
color='grey40') +
geom_point()
print(p)
ggsave(path=dir_graf,device='png',units='cm',
width=8,height=4,dpi=400,scale=2,
file=paste0('anova_etapasMOR_',ch.actual,'.png'))
qs  = summarySE(data=tmp,groupvars=c('Grupo','MORn'),
measurevar='Hurst')
qs2 = unlist(t(qs))
qs2 = as.list((qs2))
qs2 = unlist(t(qs2))
big.summary = rbind(big.summary,qs2)
View(k)
invisible(readline(prompt="Presion [enter] para continuar"))
}
# nuevo: anova de medidas repetidas
big.summary = c()
promedios2.MOR = summarySE(Hurst.MOR,na.rm=T,measurevar='Hurst',
groupvars=c('Grupo','MORn','Canal_var'))
min(promedios2.MOR$Hurst- promedios2.MOR$sd)
max(promedios2.MOR$Hurst+ promedios2.MOR$sd)
for(ch in 1:n.canales){
ch.actual = kanales$Etiqueta[ch]
print(ch.actual)
#tmp   = Hurst.todo.promedio[grep(ch.actual,Hurst.todo.promedio$Canal),]
tmp   = Hurst.MOR[grep(ch.actual,Hurst.MOR$Canal),]
#tmp.m = promedios.MOR[grep(ch.actual,promedios.MOR$Canal),]
tmp.m = summarySE(tmp,na.rm=T,measurevar='Hurst',
groupvars=c('Grupo','MORn'))
aov   = aov(Hurst ~ (Grupo) + (MORn) +(Grupo:MORn),
data=tmp)
k = summary(aov)
k = k[[1]]
print(k)
p = ggplot(tmp.m,aes(x=MORn,y=Hurst,linetype=Grupo))+
theme_classic2() +
labs(linetype=ch.actual)+
coord_cartesian(ylim=c(0.3,2.25))+
geom_line(aes(group=Grupo))+
geom_errorbar(aes(ymin=Hurst-sd,ymax=Hurst+sd),width=.1,
color='grey40') +
geom_point()
print(p)
ggsave(path=dir_graf,device='png',units='cm',
width=8,height=4,dpi=400,scale=2,
file=paste0('anova_etapasMOR_',ch.actual,'.png'))
qs  = summarySE(data=tmp,groupvars=c('Grupo','MORn'),
measurevar='Hurst')
qs2 = unlist(t(qs))
qs2 = as.list((qs2))
qs2 = unlist(t(qs2))
big.summary = rbind(big.summary,qs2)
View(k)
invisible(readline(prompt="Presion [enter] para continuar"))
}
View(big.summary)
qs
source('C:/Users/EQUIPO 1/Desktop/julio/Tesis_en_Git/Tesis/scripts_graf/colorcitos_usable05_todo.R')
sujeto = 1
source('C:/Users/EQUIPO 1/Desktop/julio/Tesis_en_Git/Tesis/scripts_graf/colorcitos_usable05_todo.R')
expon = 2
setwd(dir_actual)
dur_epoca = 30*(2**expon)
setwd(dir_actual)
#################################################
# parametros dependientes de los datos
n_canales = length(kanales$Etiqueta)
ventana   = dur_epoca*fr_muestreo
#################################################
# procesamiento parametros opcionales (ajuste)
if(unidad_par_t =='tiempo'){
ini_t   = hms2t(ajuste_ini_hms)
ini_epo = ini_t/dur_epoca
ini_pt  = floor(ini_t*fr_muestreo)
}
if(unidad_par_t =='puntos'){
ini_epo = ajuste_ini_epo
ini_t   = ini_epo*dur_epoca
ini_pt  = ini_epo*ventana
}
str_t   = 0
str_epo = 1
str_pt  = 1
min_e = 1
#################################################
# optimizacion: lee el tamano de los datos el contenedor
setwd(dir_res_mid)
ch            = 1
ch_actual     = kanales$Nombre_archivo[ch]
nom_arch      = paste0('EST_',nombre,'_',ch_actual,
'_T_',toString(dur_epoca),'.txt')
pv_t          = scan(nom_arch)
pv_t          = as.numeric(t(pv_t))
factor_escala = dur_epoca/30
n_epocas      = length(pv_t)
max_e         = n_epocas
#################################################
# zoom
max_e = hms2t(max_hms)/dur_epoca
#################################################
# contenedores de los datos
RES_T   = matrix(0,nrow=n_canales,ncol=n_epocas)
RES_TIR = matrix(0,nrow=n_canales,ncol=n_epocas)
#################################################
# inicio ciclo que recorre todos los canales
for(ch in 1:n_canales){
# cargar los datos
ch_actual = kanales$Nombre_archivo[ch]
nom_arch  = paste0('EST_',nombre,'_',ch_actual,
'_T_'  ,toString(dur_epoca),'.txt')
pv_t      = scan(nom_arch)
pv_t      = as.numeric(t(pv_t))
nom_arch  = paste0('EST_',nombre,'_',ch_actual,
'_TIR_',toString(dur_epoca),'.txt')
pv_tir    = scan(nom_arch)
pv_tir    = as.numeric(t(pv_tir))
mmm1 = min(n_epocas,length(pv_t))
mmm2 = min(n_epocas,length(pv_tir))
# organizacion de los datos en una matriz
RES_T[ch,1:mmm1]   = pv_t[1:mmm1]
RES_TIR[ch,1:mmm2] = pv_tir[1:mmm2]
}
max_e
#################################################
# contenedores de los datos
RES_T   = matrix(0,nrow=n_canales,ncol=max_e)
RES_TIR = matrix(0,nrow=n_canales,ncol=max_e)
#################################################
# inicio ciclo que recorre todos los canales
for(ch in 1:n_canales){
# cargar los datos
ch_actual = kanales$Nombre_archivo[ch]
nom_arch  = paste0('EST_',nombre,'_',ch_actual,
'_T_'  ,toString(dur_epoca),'.txt')
pv_t      = scan(nom_arch)
pv_t      = as.numeric(t(pv_t))
nom_arch  = paste0('EST_',nombre,'_',ch_actual,
'_TIR_',toString(dur_epoca),'.txt')
pv_tir    = scan(nom_arch)
pv_tir    = as.numeric(t(pv_tir))
mmm1 = min(n_epocas,length(pv_t),max_e)
mmm2 = min(n_epocas,length(pv_tir),max_e)
# organizacion de los datos en una matriz
RES_T[ch,1:mmm1]   = pv_t[1:mmm1]
RES_TIR[ch,1:mmm2] = pv_tir[1:mmm2]
}
# pedazo final de la prueba de PSR
if(binario){
RES_T[  is.na(RES_T  )] = 1
RES_TIR[is.na(RES_TIR)] = 1
M_RES1 = 1*( RES_TIR<.05 )
M_RES2 = 1*( RES_T  <.05 )
M_RES = pmin(M_RES1,M_RES2)
RES_T = (-M_RES+1)*1
}
#################################################
# preparacion de los datos
RES.grande = t(rbind(RES_T,1:length(RES_T[1,])))
#################################################
# epocas de suenno MOR
ar_indice = read_excel(paste0(info_dir,'/info_tecnico.xlsx'),
sheet='EpocasTesis')
indice    = ar_indice[,etiqueta]
indice    = as.numeric(unlist(indice))
indice    = indice[!is.na(indice)]
if(fr_muestreo==200){
indixe = ceiling(indice/3)
indixe = unique(indixe)
indixe = sort(indixe)
indice = indixe
}
RES.MOR = 1:(hms2t(max_hms)/30)
RES.MOR = rep(0,hms2t(max_hms)/30)
RES.MOR[indice]
RES.MOR         = rep(0,hms2t(max_hms)/30)
RES.MOR[indice] = 1
RES.grande = as.data.frame(RES.grande)
colnames(RES.grande) = c(kanales$Etiqueta,'Indice')
RES.MOR         = as.data.frame(RES.MOR)
colnames(RES.MOR)[1] = 'Etapa'
RES.MOR$Indice  = (1:length(RES.MOR$Etapa) -1)
RES.MOR$Relleno = RES.MOR$Etapa*0
RES.MOR$Etapa   = factor(RES.MOR$Etapa,labels = c('NMOR','MOR'))
RES.MOR$Relleno = factor(RES.MOR$Relleno,
labels=c('Etapa'))
RES.extenso = melt(RES.grande,id.vars=c('Indice'))
colnames(RES.extenso) = c('Indice','Canal_var','Estacionario')
#################################################
# inicia grafico
RES.extenso$Estacionario[is.na(RES.extenso$Estacionario)] = 0
RES.extenso$Estacionario = factor(RES.extenso$Estacionario,
labels=c('No-estacionario',
'Estacionario'))
RES.MOR$Indice = (RES.MOR$Indice-1)*(dur_epoca)
RES.MOR$Indice = as.POSIXct(as.hms(RES.MOR$Indice))
RES.extenso$D_chunk = rep(dur_epoca,length(RES.extenso$Indice))
#if(FALSE){
B = ggplot(RES.extenso,aes(x=Indice,y=Canal_var,fill=Estacionario)) +
geom_raster() +
xlab(NULL) + ylab(NULL) +
theme_bw() +
scale_x_discrete(expand=c(0,0),breaks=NULL) +
#scale_x_datetime(expand=c(0,0),labels=date_format("%H:%M"),
#                 breaks = date_breaks("20 min"))+
scale_y_discrete(expand=c(0,0),
limits=rev(levels(RES.extenso$Canal_var))) +
scale_fill_manual(values=c('white','black'))+
#labs(title=paste('Época =',toString(dur_epoca),'s'),
#     subtitle=paste('Participante:',etiqueta,'| Grupo:',grupo)) +
labs(title=paste('Participante:',etiqueta,'| Grupo:',grupo)) +
#theme(legend.position=c(1,1),legend.direction = 'horizontal',
#      legend.justification=c(1,0))+
theme(legend.position='bottom') +
theme(legend.title=element_blank()) +
theme(legend.key = element_rect(color = 'black')) +
rotate_x_text(angle = 45)
print(B)
C =  ggplot(RES.MOR,aes(x=Indice,y=Relleno,fill=Etapa)) +
geom_raster() +
xlab('Tiempo [hh:mm]') + ylab(NULL) +
theme_bw() +
scale_x_datetime(expand=c(0,0),labels=date_format("%H:%M"),
breaks = date_breaks("20 min"))+
#scale_x_datetime(expand=c(0,0),breaks = NULL)+
scale_y_discrete(expand=c(0,0)) +
scale_fill_manual(values=c('#acff81','#077813'))+
#labs(title=paste('Participante:',etiqueta,'| Grupo:',grupo)) +
theme(legend.position='bottom') +
theme(legend.title=element_blank()) +
#theme(axis.ticks = element_blank(),axis.text.x = NULL)+
rotate_x_text(angle = 45)
print(C)
RES.MOR$Indice  = (1:length(RES.MOR$Etapa) -1)/30
RES.MOR$Relleno = RES.MOR$Etapa*0
RES.MOR$Etapa   = factor(RES.MOR$Etapa,labels = c('NMOR','MOR'))
RES.MOR$Relleno = factor(RES.MOR$Relleno,
labels=c('Etapa'))
RES.MOR         = rep(0,hms2t(max_hms)/30)
RES.MOR[indice] = 1
RES.grande = as.data.frame(RES.grande)
colnames(RES.grande) = c(kanales$Etiqueta,'Indice')
RES.MOR         = as.data.frame(RES.MOR)
colnames(RES.MOR)[1] = 'Etapa'
RES.MOR$Indice  = (1:length(RES.MOR$Etapa) -1)/30
RES.MOR$Relleno = RES.MOR$Etapa*0
RES.MOR$Etapa   = factor(RES.MOR$Etapa,labels = c('NMOR','MOR'))
RES.MOR$Relleno = factor(RES.MOR$Relleno,
labels=c('Etapa'))
RES.extenso = melt(RES.grande,id.vars=c('Indice'))
colnames(RES.extenso) = c('Indice','Canal_var','Estacionario')
#################################################
# inicia grafico
RES.extenso$Estacionario[is.na(RES.extenso$Estacionario)] = 0
RES.extenso$Estacionario = factor(RES.extenso$Estacionario,
labels=c('No-estacionario',
'Estacionario'))
RES.MOR$Indice = (RES.MOR$Indice-1)*(dur_epoca)
RES.MOR$Indice = as.POSIXct(as.hms(RES.MOR$Indice))
#if(FALSE){
B = ggplot(RES.extenso,aes(x=Indice,y=Canal_var,fill=Estacionario)) +
geom_raster() +
xlab(NULL) + ylab(NULL) +
theme_bw() +
scale_x_discrete(expand=c(0,0),breaks=NULL) +
#scale_x_datetime(expand=c(0,0),labels=date_format("%H:%M"),
#                 breaks = date_breaks("20 min"))+
scale_y_discrete(expand=c(0,0),
limits=rev(levels(RES.extenso$Canal_var))) +
scale_fill_manual(values=c('white','black'))+
#labs(title=paste('Época =',toString(dur_epoca),'s'),
#     subtitle=paste('Participante:',etiqueta,'| Grupo:',grupo)) +
labs(title=paste('Participante:',etiqueta,'| Grupo:',grupo)) +
#theme(legend.position=c(1,1),legend.direction = 'horizontal',
#      legend.justification=c(1,0))+
theme(legend.position='bottom') +
theme(legend.title=element_blank()) +
theme(legend.key = element_rect(color = 'black')) +
rotate_x_text(angle = 45)
C =  ggplot(RES.MOR,aes(x=Indice,y=Relleno,fill=Etapa)) +
geom_raster() +
xlab('Tiempo [hh:mm]') + ylab(NULL) +
theme_bw() +
scale_x_datetime(expand=c(0,0),labels=date_format("%H:%M"),
breaks = date_breaks("20 min"))+
#scale_x_datetime(expand=c(0,0),breaks = NULL)+
scale_y_discrete(expand=c(0,0)) +
scale_fill_manual(values=c('#acff81','#077813'))+
#labs(title=paste('Participante:',etiqueta,'| Grupo:',grupo)) +
theme(legend.position='bottom') +
theme(legend.title=element_blank()) +
#theme(axis.ticks = element_blank(),axis.text.x = NULL)+
rotate_x_text(angle = 45)
print(C)
source('C:/Users/EQUIPO 1/Desktop/julio/Tesis_en_Git/Tesis/scripts_graf/colorcitos_usable05_parte.R')
print(C)
source('C:/Users/EQUIPO 1/Desktop/julio/Tesis_en_Git/Tesis/scripts_graf/colorcitos_usable05_parte.R')
source('C:/Users/EQUIPO 1/Desktop/julio/Tesis_en_Git/Tesis/scripts_graf/colorcitos_usable05_parte.R')
print(C)
source('C:/Users/EQUIPO 1/Desktop/julio/Tesis_en_Git/Tesis/scripts_graf/colorcitos_usable05_parte.R')
print(C)
ggarrange(B,C,ncol=1,nrow=2,align = 'v',common.legend = TRUE,
heights = c(.8,.2),legend = 'bottom')
source('C:/Users/EQUIPO 1/Desktop/julio/Tesis_en_Git/Tesis/scripts_graf/colorcitos_usable05_todo.R')
